services:
  db:
    image: postgres
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      PGUSER: postgres
      PGPASSWORD: postgres
    ports:
      - 5432:5432
    healthcheck:
      test: ["CMD-SHELL", "pg_isready", "-d", "postgres"]
      interval: 5s
      timeout: 5s
      retries: 10

  initdb:
    depends_on:
      db:
        condition: service_healthy
    build: .
    restart: "no"
    environment:
      POSTGRES_HOST: db
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: stackoverfaux
      POSTGRES_PORT: 5432
      DELETE_DB: true
    entrypoint: node dbinit.js

  loaddb:
    depends_on:
      initdb:
        condition: service_completed_successfully
    build: .
    restart: "no"
    environment:
      POSTGRES_HOST: db
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: stackoverfaux
      POSTGRES_PORT: 5432
      DB_DATA_FILE: /var/run/stackoverfaux.json
    volumes:
      - type: bind
        source: ./stackoverfaux.json
        target: /var/run/stackoverfaux.json
    entrypoint: node dbload.js

  stackoverfaux:
    depends_on:
      loaddb:
        condition: service_completed_successfully
    build: .
    environment:
      POSTGRES_HOST: db
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: stackoverfaux
      POSTGRES_PORT: 5432
    ports:
      - 3000:3000
